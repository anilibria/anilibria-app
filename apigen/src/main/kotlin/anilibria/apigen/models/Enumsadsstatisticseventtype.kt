/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package anilibria.apigen.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Типы событий рекламной статистики
 *
 * Values: AD_VAST_SHOW,AD_VAST_REQUEST,AD_BANNER_VIEW,AD_BANNER_CLICK,MEDIA_PROMOTION_VIEW,MEDIA_PROMOTION_CLICK
 */

@JsonClass(generateAdapter = false)
enum class Enumsadsstatisticseventtype(val value: kotlin.String) {

    @Json(name = "AD_VAST_SHOW")
    AD_VAST_SHOW("AD_VAST_SHOW"),

    @Json(name = "AD_VAST_REQUEST")
    AD_VAST_REQUEST("AD_VAST_REQUEST"),

    @Json(name = "AD_BANNER_VIEW")
    AD_BANNER_VIEW("AD_BANNER_VIEW"),

    @Json(name = "AD_BANNER_CLICK")
    AD_BANNER_CLICK("AD_BANNER_CLICK"),

    @Json(name = "MEDIA_PROMOTION_VIEW")
    MEDIA_PROMOTION_VIEW("MEDIA_PROMOTION_VIEW"),

    @Json(name = "MEDIA_PROMOTION_CLICK")
    MEDIA_PROMOTION_CLICK("MEDIA_PROMOTION_CLICK");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is Enumsadsstatisticseventtype) "$data" else null

        /**
         * Returns a valid [Enumsadsstatisticseventtype] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): Enumsadsstatisticseventtype? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

