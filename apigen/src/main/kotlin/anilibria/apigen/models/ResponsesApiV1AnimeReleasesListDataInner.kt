/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package anilibria.apigen.models

import anilibria.apigen.models.Commonsv1modelscomponentsimagewithOptimized
import anilibria.apigen.models.Modelsanimegenresv1genre
import anilibria.apigen.models.Modelsanimereleasesv1releaseageRating
import anilibria.apigen.models.Modelsanimereleasesv1releaseepisode
import anilibria.apigen.models.Modelsanimereleasesv1releasemember
import anilibria.apigen.models.Modelsanimereleasesv1releasename
import anilibria.apigen.models.Modelsanimereleasesv1releasepublishDay
import anilibria.apigen.models.Modelsanimereleasesv1releaseseason
import anilibria.apigen.models.Modelsanimereleasesv1releasetype
import anilibria.apigen.models.Modelsanimesponsorsv1sponsor
import anilibria.apigen.models.Modelsanimetorrentsv1torrent

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id Идентификатор релиза
 * @param type 
 * @param year Год
 * @param name 
 * @param alias Ссылка на релиз
 * @param season 
 * @param poster 
 * @param freshAt Дата поднятия релиза
 * @param createdAt Дата создания релиза
 * @param updatedAt Дата обновления релиза
 * @param isOngoing Релиз в данный момент выходит в стране производства
 * @param ageRating 
 * @param publishDay 
 * @param description Описание релиза
 * @param notification Важная информация / Оповещение
 * @param episodesTotal Всего эпизодов
 * @param externalPlayer Ссылка на внешний плеер
 * @param isInProduction Релиз в работе / озвучивается
 * @param isBlockedByGeo Блокировка по геолокации
 * @param isBlockedByCopyrights Релиз заблокирован правообладателем
 * @param addedInUsersFavorites Рейтинг по добавлению в коллекцию
 * @param averageDurationOfEpisode Средняя продолжительность серий
 * @param addedInPlannedCollection Кол-во добавлений в PLANNED коллекцию
 * @param addedInWatchedCollection Кол-во добавлений в WATCHED коллекцию
 * @param addedInWatchingCollection Кол-во добавлений в WATCHING коллекцию
 * @param addedInPostponedCollection Кол-во добавлений в POSTPONED коллекцию
 * @param addedInAbandonedCollection Кол-во добавлений в ABANDONED коллекцию
 * @param genres 
 * @param members 
 * @param episodes 
 * @param torrents 
 * @param sponsor 
 */
@JsonClass(generateAdapter = true)

data class ResponsesApiV1AnimeReleasesListDataInner (

    /* Идентификатор релиза */
    @Json(name = "id")
    val id: kotlin.Int? = null,

    @Json(name = "type")
    val type: Modelsanimereleasesv1releasetype? = null,

    /* Год */
    @Json(name = "year")
    val year: kotlin.Int? = null,

    @Json(name = "name")
    val name: Modelsanimereleasesv1releasename? = null,

    /* Ссылка на релиз */
    @Json(name = "alias")
    val alias: kotlin.String? = null,

    @Json(name = "season")
    val season: Modelsanimereleasesv1releaseseason? = null,

    @Json(name = "poster")
    val poster: Commonsv1modelscomponentsimagewithOptimized? = null,

    /* Дата поднятия релиза */
    @Json(name = "fresh_at")
    val freshAt: kotlin.String? = null,

    /* Дата создания релиза */
    @Json(name = "created_at")
    val createdAt: kotlin.String? = null,

    /* Дата обновления релиза */
    @Json(name = "updated_at")
    val updatedAt: kotlin.String? = null,

    /* Релиз в данный момент выходит в стране производства */
    @Json(name = "is_ongoing")
    val isOngoing: kotlin.Boolean? = null,

    @Json(name = "age_rating")
    val ageRating: Modelsanimereleasesv1releaseageRating? = null,

    @Json(name = "publish_day")
    val publishDay: Modelsanimereleasesv1releasepublishDay? = null,

    /* Описание релиза */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Важная информация / Оповещение */
    @Json(name = "notification")
    val notification: kotlin.String? = null,

    /* Всего эпизодов */
    @Json(name = "episodes_total")
    val episodesTotal: kotlin.Int? = null,

    /* Ссылка на внешний плеер */
    @Json(name = "external_player")
    val externalPlayer: kotlin.String? = null,

    /* Релиз в работе / озвучивается */
    @Json(name = "is_in_production")
    val isInProduction: kotlin.Boolean? = null,

    /* Блокировка по геолокации */
    @Json(name = "is_blocked_by_geo")
    val isBlockedByGeo: kotlin.Boolean? = null,

    /* Релиз заблокирован правообладателем */
    @Json(name = "is_blocked_by_copyrights")
    val isBlockedByCopyrights: kotlin.Boolean? = null,

    /* Рейтинг по добавлению в коллекцию */
    @Json(name = "added_in_users_favorites")
    val addedInUsersFavorites: kotlin.Int? = null,

    /* Средняя продолжительность серий */
    @Json(name = "average_duration_of_episode")
    val averageDurationOfEpisode: kotlin.Int? = null,

    /* Кол-во добавлений в PLANNED коллекцию */
    @Json(name = "added_in_planned_collection")
    val addedInPlannedCollection: kotlin.Int? = null,

    /* Кол-во добавлений в WATCHED коллекцию */
    @Json(name = "added_in_watched_collection")
    val addedInWatchedCollection: kotlin.Int? = null,

    /* Кол-во добавлений в WATCHING коллекцию */
    @Json(name = "added_in_watching_collection")
    val addedInWatchingCollection: kotlin.Int? = null,

    /* Кол-во добавлений в POSTPONED коллекцию */
    @Json(name = "added_in_postponed_collection")
    val addedInPostponedCollection: kotlin.Int? = null,

    /* Кол-во добавлений в ABANDONED коллекцию */
    @Json(name = "added_in_abandoned_collection")
    val addedInAbandonedCollection: kotlin.Int? = null,

    @Json(name = "genres")
    val genres: kotlin.collections.List<Modelsanimegenresv1genre>? = null,

    @Json(name = "members")
    val members: kotlin.collections.List<Modelsanimereleasesv1releasemember>? = null,

    @Json(name = "episodes")
    val episodes: kotlin.collections.List<Modelsanimereleasesv1releaseepisode>? = null,

    @Json(name = "torrents")
    val torrents: kotlin.collections.List<Modelsanimetorrentsv1torrent>? = null,

    @Json(name = "sponsor")
    val sponsor: Modelsanimesponsorsv1sponsor? = null

) {


}

