/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package anilibria.apigen.models

import anilibria.apigen.models.Modelsanimereleasesv1release
import anilibria.apigen.models.Modelsanimetorrentsv1torrentcodec
import anilibria.apigen.models.Modelsanimetorrentsv1torrentcolor
import anilibria.apigen.models.Modelsanimetorrentsv1torrentquality
import anilibria.apigen.models.Modelsanimetorrentsv1torrenttype
import anilibria.apigen.models.ResponsesApiV1AnimeTorrentAllOfTorrentMembers

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param hash 
 * @param propertySize Размер торрент-файла в байтах
 * @param type 
 * @param color 
 * @param codec 
 * @param label 
 * @param quality 
 * @param magnet 
 * @param filename 
 * @param seeders Количество сидеров
 * @param bitrate Битрейт, Кбит/сек
 * @param leechers Количество личеров
 * @param sortOrder Порядок сортировки торрента внутри релиза
 * @param updatedAt 
 * @param isHardsub Является ли торрент хардсабом
 * @param description Описание торрента
 * @param createdAt 
 * @param completedTimes Общее количество скачиваний торрента
 * @param torrentMembers 
 * @param release 
 */
@JsonClass(generateAdapter = true)

data class Responsesapiv1animetorrent (

    @Json(name = "id")
    val id: kotlin.Int? = null,

    @Json(name = "hash")
    val hash: kotlin.String? = null,

    /* Размер торрент-файла в байтах */
    @Json(name = "size")
    val propertySize: kotlin.Int? = null,

    @Json(name = "type")
    val type: Modelsanimetorrentsv1torrenttype? = null,

    @Json(name = "color")
    val color: Modelsanimetorrentsv1torrentcolor? = null,

    @Json(name = "codec")
    val codec: Modelsanimetorrentsv1torrentcodec? = null,

    @Json(name = "label")
    val label: kotlin.String? = null,

    @Json(name = "quality")
    val quality: Modelsanimetorrentsv1torrentquality? = null,

    @Json(name = "magnet")
    val magnet: kotlin.String? = null,

    @Json(name = "filename")
    val filename: kotlin.String? = null,

    /* Количество сидеров */
    @Json(name = "seeders")
    val seeders: kotlin.Int? = null,

    /* Битрейт, Кбит/сек */
    @Json(name = "bitrate")
    val bitrate: kotlin.Int? = null,

    /* Количество личеров */
    @Json(name = "leechers")
    val leechers: kotlin.Int? = null,

    /* Порядок сортировки торрента внутри релиза */
    @Json(name = "sort_order")
    val sortOrder: kotlin.Int? = null,

    @Json(name = "updated_at")
    val updatedAt: kotlin.String? = null,

    /* Является ли торрент хардсабом */
    @Json(name = "is_hardsub")
    val isHardsub: kotlin.Boolean? = null,

    /* Описание торрента */
    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "created_at")
    val createdAt: kotlin.String? = null,

    /* Общее количество скачиваний торрента */
    @Json(name = "completed_times")
    val completedTimes: kotlin.Int? = null,

    @Json(name = "torrent_members")
    val torrentMembers: kotlin.collections.List<ResponsesApiV1AnimeTorrentAllOfTorrentMembers>? = null,

    @Json(name = "release")
    val release: Modelsanimereleasesv1release? = null

) {


}

